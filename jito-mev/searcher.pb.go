// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.1
// source: searcher.proto

package mev

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SlotList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots []uint64 `protobuf:"varint,1,rep,packed,name=slots,proto3" json:"slots,omitempty"`
}

func (x *SlotList) Reset() {
	*x = SlotList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotList) ProtoMessage() {}

func (x *SlotList) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotList.ProtoReflect.Descriptor instead.
func (*SlotList) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{0}
}

func (x *SlotList) GetSlots() []uint64 {
	if x != nil {
		return x.Slots
	}
	return nil
}

type ConnectedLeadersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Mapping of validator pubkey to leader slots for the current epoch.
	ConnectedValidators map[string]*SlotList `protobuf:"bytes,1,rep,name=connected_validators,json=connectedValidators,proto3" json:"connected_validators,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ConnectedLeadersResponse) Reset() {
	*x = ConnectedLeadersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedLeadersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedLeadersResponse) ProtoMessage() {}

func (x *ConnectedLeadersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedLeadersResponse.ProtoReflect.Descriptor instead.
func (*ConnectedLeadersResponse) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectedLeadersResponse) GetConnectedValidators() map[string]*SlotList {
	if x != nil {
		return x.ConnectedValidators
	}
	return nil
}

type SendBundleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bundle *Bundle `protobuf:"bytes,1,opt,name=bundle,proto3" json:"bundle,omitempty"`
}

func (x *SendBundleRequest) Reset() {
	*x = SendBundleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBundleRequest) ProtoMessage() {}

func (x *SendBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBundleRequest.ProtoReflect.Descriptor instead.
func (*SendBundleRequest) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{2}
}

func (x *SendBundleRequest) GetBundle() *Bundle {
	if x != nil {
		return x.Bundle
	}
	return nil
}

type SendBundleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// server uuid for the bundle
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *SendBundleResponse) Reset() {
	*x = SendBundleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendBundleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendBundleResponse) ProtoMessage() {}

func (x *SendBundleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendBundleResponse.ProtoReflect.Descriptor instead.
func (*SendBundleResponse) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{3}
}

func (x *SendBundleResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type ProgramSubscriptionV0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Base58 encoded program id that transactions mention
	Programs []string `protobuf:"bytes,1,rep,name=programs,proto3" json:"programs,omitempty"`
}

func (x *ProgramSubscriptionV0) Reset() {
	*x = ProgramSubscriptionV0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramSubscriptionV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramSubscriptionV0) ProtoMessage() {}

func (x *ProgramSubscriptionV0) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramSubscriptionV0.ProtoReflect.Descriptor instead.
func (*ProgramSubscriptionV0) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{4}
}

func (x *ProgramSubscriptionV0) GetPrograms() []string {
	if x != nil {
		return x.Programs
	}
	return nil
}

type WriteLockedAccountSubscriptionV0 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Base58 encoded account pubkey that transactions mention
	Accounts []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *WriteLockedAccountSubscriptionV0) Reset() {
	*x = WriteLockedAccountSubscriptionV0{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteLockedAccountSubscriptionV0) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteLockedAccountSubscriptionV0) ProtoMessage() {}

func (x *WriteLockedAccountSubscriptionV0) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteLockedAccountSubscriptionV0.ProtoReflect.Descriptor instead.
func (*WriteLockedAccountSubscriptionV0) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{5}
}

func (x *WriteLockedAccountSubscriptionV0) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type MempoolSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by program id or account pubkey
	//
	// Types that are assignable to Msg:
	//
	//	*MempoolSubscription_ProgramV0Sub
	//	*MempoolSubscription_WlaV0Sub
	Msg isMempoolSubscription_Msg `protobuf_oneof:"msg"`
	// Filters transactions to originate from specified regions.
	// Defaults to the currently connected region.
	Regions []string `protobuf:"bytes,10,rep,name=regions,proto3" json:"regions,omitempty"`
}

func (x *MempoolSubscription) Reset() {
	*x = MempoolSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MempoolSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MempoolSubscription) ProtoMessage() {}

func (x *MempoolSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MempoolSubscription.ProtoReflect.Descriptor instead.
func (*MempoolSubscription) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{6}
}

func (m *MempoolSubscription) GetMsg() isMempoolSubscription_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *MempoolSubscription) GetProgramV0Sub() *ProgramSubscriptionV0 {
	if x, ok := x.GetMsg().(*MempoolSubscription_ProgramV0Sub); ok {
		return x.ProgramV0Sub
	}
	return nil
}

func (x *MempoolSubscription) GetWlaV0Sub() *WriteLockedAccountSubscriptionV0 {
	if x, ok := x.GetMsg().(*MempoolSubscription_WlaV0Sub); ok {
		return x.WlaV0Sub
	}
	return nil
}

func (x *MempoolSubscription) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

type isMempoolSubscription_Msg interface {
	isMempoolSubscription_Msg()
}

type MempoolSubscription_ProgramV0Sub struct {
	ProgramV0Sub *ProgramSubscriptionV0 `protobuf:"bytes,1,opt,name=program_v0_sub,json=programV0Sub,proto3,oneof"`
}

type MempoolSubscription_WlaV0Sub struct {
	WlaV0Sub *WriteLockedAccountSubscriptionV0 `protobuf:"bytes,2,opt,name=wla_v0_sub,json=wlaV0Sub,proto3,oneof"` /// field numbers upto (and incl) 9 are reserved
}

func (*MempoolSubscription_ProgramV0Sub) isMempoolSubscription_Msg() {}

func (*MempoolSubscription_WlaV0Sub) isMempoolSubscription_Msg() {}

type PendingTxNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// server-side timestamp the transactions were generated at (for debugging/profiling purposes)
	ServerSideTs *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=server_side_ts,json=serverSideTs,proto3" json:"server_side_ts,omitempty"`
	// expiration time of the packet
	ExpirationTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	// list of pending transactions
	Transactions []*Packet `protobuf:"bytes,3,rep,name=transactions,proto3" json:"transactions,omitempty"`
}

func (x *PendingTxNotification) Reset() {
	*x = PendingTxNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingTxNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingTxNotification) ProtoMessage() {}

func (x *PendingTxNotification) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingTxNotification.ProtoReflect.Descriptor instead.
func (*PendingTxNotification) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{7}
}

func (x *PendingTxNotification) GetServerSideTs() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerSideTs
	}
	return nil
}

func (x *PendingTxNotification) GetExpirationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationTime
	}
	return nil
}

func (x *PendingTxNotification) GetTransactions() []*Packet {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type NextScheduledLeaderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NextScheduledLeaderRequest) Reset() {
	*x = NextScheduledLeaderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextScheduledLeaderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextScheduledLeaderRequest) ProtoMessage() {}

func (x *NextScheduledLeaderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextScheduledLeaderRequest.ProtoReflect.Descriptor instead.
func (*NextScheduledLeaderRequest) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{8}
}

type NextScheduledLeaderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the current slot the backend is on
	CurrentSlot uint64 `protobuf:"varint,1,opt,name=current_slot,json=currentSlot,proto3" json:"current_slot,omitempty"`
	// the slot and identity of the next leader
	NextLeaderSlot     uint64 `protobuf:"varint,2,opt,name=next_leader_slot,json=nextLeaderSlot,proto3" json:"next_leader_slot,omitempty"`
	NextLeaderIdentity string `protobuf:"bytes,3,opt,name=next_leader_identity,json=nextLeaderIdentity,proto3" json:"next_leader_identity,omitempty"`
}

func (x *NextScheduledLeaderResponse) Reset() {
	*x = NextScheduledLeaderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NextScheduledLeaderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NextScheduledLeaderResponse) ProtoMessage() {}

func (x *NextScheduledLeaderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NextScheduledLeaderResponse.ProtoReflect.Descriptor instead.
func (*NextScheduledLeaderResponse) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{9}
}

func (x *NextScheduledLeaderResponse) GetCurrentSlot() uint64 {
	if x != nil {
		return x.CurrentSlot
	}
	return 0
}

func (x *NextScheduledLeaderResponse) GetNextLeaderSlot() uint64 {
	if x != nil {
		return x.NextLeaderSlot
	}
	return 0
}

func (x *NextScheduledLeaderResponse) GetNextLeaderIdentity() string {
	if x != nil {
		return x.NextLeaderIdentity
	}
	return ""
}

type ConnectedLeadersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConnectedLeadersRequest) Reset() {
	*x = ConnectedLeadersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedLeadersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedLeadersRequest) ProtoMessage() {}

func (x *ConnectedLeadersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedLeadersRequest.ProtoReflect.Descriptor instead.
func (*ConnectedLeadersRequest) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{10}
}

type ConnectedLeadersRegionedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defaults to the currently connected region if no region provided.
	Regions []string `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"`
}

func (x *ConnectedLeadersRegionedRequest) Reset() {
	*x = ConnectedLeadersRegionedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedLeadersRegionedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedLeadersRegionedRequest) ProtoMessage() {}

func (x *ConnectedLeadersRegionedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedLeadersRegionedRequest.ProtoReflect.Descriptor instead.
func (*ConnectedLeadersRegionedRequest) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{11}
}

func (x *ConnectedLeadersRegionedRequest) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

type ConnectedLeadersRegionedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectedValidators map[string]*ConnectedLeadersResponse `protobuf:"bytes,1,rep,name=connected_validators,json=connectedValidators,proto3" json:"connected_validators,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ConnectedLeadersRegionedResponse) Reset() {
	*x = ConnectedLeadersRegionedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectedLeadersRegionedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectedLeadersRegionedResponse) ProtoMessage() {}

func (x *ConnectedLeadersRegionedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectedLeadersRegionedResponse.ProtoReflect.Descriptor instead.
func (*ConnectedLeadersRegionedResponse) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{12}
}

func (x *ConnectedLeadersRegionedResponse) GetConnectedValidators() map[string]*ConnectedLeadersResponse {
	if x != nil {
		return x.ConnectedValidators
	}
	return nil
}

type GetTipAccountsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTipAccountsRequest) Reset() {
	*x = GetTipAccountsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTipAccountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTipAccountsRequest) ProtoMessage() {}

func (x *GetTipAccountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTipAccountsRequest.ProtoReflect.Descriptor instead.
func (*GetTipAccountsRequest) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{13}
}

type GetTipAccountsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accounts []string `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *GetTipAccountsResponse) Reset() {
	*x = GetTipAccountsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTipAccountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTipAccountsResponse) ProtoMessage() {}

func (x *GetTipAccountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTipAccountsResponse.ProtoReflect.Descriptor instead.
func (*GetTipAccountsResponse) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{14}
}

func (x *GetTipAccountsResponse) GetAccounts() []string {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type SubscribeBundleResultsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeBundleResultsRequest) Reset() {
	*x = SubscribeBundleResultsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeBundleResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeBundleResultsRequest) ProtoMessage() {}

func (x *SubscribeBundleResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeBundleResultsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeBundleResultsRequest) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{15}
}

type GetRegionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRegionsRequest) Reset() {
	*x = GetRegionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionsRequest) ProtoMessage() {}

func (x *GetRegionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionsRequest.ProtoReflect.Descriptor instead.
func (*GetRegionsRequest) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{16}
}

type GetRegionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The region the client is currently connected to
	CurrentRegion string `protobuf:"bytes,1,opt,name=current_region,json=currentRegion,proto3" json:"current_region,omitempty"`
	// Regions that are online and ready for connections
	// All regions: https://jito-labs.gitbook.io/mev/systems/connecting/mainnet
	AvailableRegions []string `protobuf:"bytes,2,rep,name=available_regions,json=availableRegions,proto3" json:"available_regions,omitempty"`
}

func (x *GetRegionsResponse) Reset() {
	*x = GetRegionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searcher_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionsResponse) ProtoMessage() {}

func (x *GetRegionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searcher_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionsResponse.ProtoReflect.Descriptor instead.
func (*GetRegionsResponse) Descriptor() ([]byte, []int) {
	return file_searcher_proto_rawDescGZIP(), []int{17}
}

func (x *GetRegionsResponse) GetCurrentRegion() string {
	if x != nil {
		return x.CurrentRegion
	}
	return ""
}

func (x *GetRegionsResponse) GetAvailableRegions() []string {
	if x != nil {
		return x.AvailableRegions
	}
	return nil
}

var File_searcher_proto protoreflect.FileDescriptor

var file_searcher_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x0c, 0x62, 0x75, 0x6e, 0x64,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x08, 0x53, 0x6c, 0x6f, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0xe6, 0x01, 0x0a, 0x18, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x1a, 0x5a, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x53,
	0x6c, 0x6f, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x3b, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x06, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0x28, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x15, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x30, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x3e,
	0x0a, 0x20, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x30, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xcb,
	0x01, 0x0a, 0x13, 0x4d, 0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x5f, 0x76, 0x30, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x30, 0x48,
	0x00, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x56, 0x30, 0x53, 0x75, 0x62, 0x12,
	0x4a, 0x0a, 0x0a, 0x77, 0x6c, 0x61, 0x5f, 0x76, 0x30, 0x5f, 0x73, 0x75, 0x62, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x30, 0x48,
	0x00, 0x52, 0x08, 0x77, 0x6c, 0x61, 0x56, 0x30, 0x53, 0x75, 0x62, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xd2, 0x01, 0x0a,
	0x15, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x54, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x32, 0x0a,
	0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x9c, 0x01, 0x0a, 0x1b, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x6c,
	0x6f, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6e, 0x65,
	0x78, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x30, 0x0a, 0x14,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x78, 0x74,
	0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x19,
	0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x1f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x86, 0x02, 0x0a, 0x20, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x14, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x1a, 0x6a, 0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x17, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x54,
	0x69, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x1f,
	0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x68, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x32, 0xf4,
	0x05, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5b, 0x0a, 0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x2e, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x30, 0x01, 0x12,
	0x56, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4d, 0x65, 0x6d, 0x70,
	0x6f, 0x6f, 0x6c, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4d,
	0x65, 0x6d, 0x70, 0x6f, 0x6f, 0x6c, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x78, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x00, 0x30, 0x01, 0x12, 0x49, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x67, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x53, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4e, 0x65,
	0x78, 0x74, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x12, 0x21, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x76, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x29, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0f, 0x5a, 0x0d, 0x6a, 0x69, 0x74, 0x6f, 0x2d, 0x6c, 0x61,
	0x62, 0x73, 0x2f, 0x6d, 0x65, 0x76, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_searcher_proto_rawDescOnce sync.Once
	file_searcher_proto_rawDescData = file_searcher_proto_rawDesc
)

func file_searcher_proto_rawDescGZIP() []byte {
	file_searcher_proto_rawDescOnce.Do(func() {
		file_searcher_proto_rawDescData = protoimpl.X.CompressGZIP(file_searcher_proto_rawDescData)
	})
	return file_searcher_proto_rawDescData
}

var file_searcher_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_searcher_proto_goTypes = []interface{}{
	(*SlotList)(nil),                         // 0: searcher.SlotList
	(*ConnectedLeadersResponse)(nil),         // 1: searcher.ConnectedLeadersResponse
	(*SendBundleRequest)(nil),                // 2: searcher.SendBundleRequest
	(*SendBundleResponse)(nil),               // 3: searcher.SendBundleResponse
	(*ProgramSubscriptionV0)(nil),            // 4: searcher.ProgramSubscriptionV0
	(*WriteLockedAccountSubscriptionV0)(nil), // 5: searcher.WriteLockedAccountSubscriptionV0
	(*MempoolSubscription)(nil),              // 6: searcher.MempoolSubscription
	(*PendingTxNotification)(nil),            // 7: searcher.PendingTxNotification
	(*NextScheduledLeaderRequest)(nil),       // 8: searcher.NextScheduledLeaderRequest
	(*NextScheduledLeaderResponse)(nil),      // 9: searcher.NextScheduledLeaderResponse
	(*ConnectedLeadersRequest)(nil),          // 10: searcher.ConnectedLeadersRequest
	(*ConnectedLeadersRegionedRequest)(nil),  // 11: searcher.ConnectedLeadersRegionedRequest
	(*ConnectedLeadersRegionedResponse)(nil), // 12: searcher.ConnectedLeadersRegionedResponse
	(*GetTipAccountsRequest)(nil),            // 13: searcher.GetTipAccountsRequest
	(*GetTipAccountsResponse)(nil),           // 14: searcher.GetTipAccountsResponse
	(*SubscribeBundleResultsRequest)(nil),    // 15: searcher.SubscribeBundleResultsRequest
	(*GetRegionsRequest)(nil),                // 16: searcher.GetRegionsRequest
	(*GetRegionsResponse)(nil),               // 17: searcher.GetRegionsResponse
	nil,                                      // 18: searcher.ConnectedLeadersResponse.ConnectedValidatorsEntry
	nil,                                      // 19: searcher.ConnectedLeadersRegionedResponse.ConnectedValidatorsEntry
	(*Bundle)(nil),                           // 20: bundle.Bundle
	(*timestamppb.Timestamp)(nil),            // 21: google.protobuf.Timestamp
	(*Packet)(nil),                           // 22: packet.Packet
	(*BundleResult)(nil),                     // 23: bundle.BundleResult
}
var file_searcher_proto_depIdxs = []int32{
	18, // 0: searcher.ConnectedLeadersResponse.connected_validators:type_name -> searcher.ConnectedLeadersResponse.ConnectedValidatorsEntry
	20, // 1: searcher.SendBundleRequest.bundle:type_name -> bundle.Bundle
	4,  // 2: searcher.MempoolSubscription.program_v0_sub:type_name -> searcher.ProgramSubscriptionV0
	5,  // 3: searcher.MempoolSubscription.wla_v0_sub:type_name -> searcher.WriteLockedAccountSubscriptionV0
	21, // 4: searcher.PendingTxNotification.server_side_ts:type_name -> google.protobuf.Timestamp
	21, // 5: searcher.PendingTxNotification.expiration_time:type_name -> google.protobuf.Timestamp
	22, // 6: searcher.PendingTxNotification.transactions:type_name -> packet.Packet
	19, // 7: searcher.ConnectedLeadersRegionedResponse.connected_validators:type_name -> searcher.ConnectedLeadersRegionedResponse.ConnectedValidatorsEntry
	0,  // 8: searcher.ConnectedLeadersResponse.ConnectedValidatorsEntry.value:type_name -> searcher.SlotList
	1,  // 9: searcher.ConnectedLeadersRegionedResponse.ConnectedValidatorsEntry.value:type_name -> searcher.ConnectedLeadersResponse
	15, // 10: searcher.SearcherService.SubscribeBundleResults:input_type -> searcher.SubscribeBundleResultsRequest
	6,  // 11: searcher.SearcherService.SubscribeMempool:input_type -> searcher.MempoolSubscription
	2,  // 12: searcher.SearcherService.SendBundle:input_type -> searcher.SendBundleRequest
	8,  // 13: searcher.SearcherService.GetNextScheduledLeader:input_type -> searcher.NextScheduledLeaderRequest
	10, // 14: searcher.SearcherService.GetConnectedLeaders:input_type -> searcher.ConnectedLeadersRequest
	11, // 15: searcher.SearcherService.GetConnectedLeadersRegioned:input_type -> searcher.ConnectedLeadersRegionedRequest
	13, // 16: searcher.SearcherService.GetTipAccounts:input_type -> searcher.GetTipAccountsRequest
	16, // 17: searcher.SearcherService.GetRegions:input_type -> searcher.GetRegionsRequest
	23, // 18: searcher.SearcherService.SubscribeBundleResults:output_type -> bundle.BundleResult
	7,  // 19: searcher.SearcherService.SubscribeMempool:output_type -> searcher.PendingTxNotification
	3,  // 20: searcher.SearcherService.SendBundle:output_type -> searcher.SendBundleResponse
	9,  // 21: searcher.SearcherService.GetNextScheduledLeader:output_type -> searcher.NextScheduledLeaderResponse
	1,  // 22: searcher.SearcherService.GetConnectedLeaders:output_type -> searcher.ConnectedLeadersResponse
	12, // 23: searcher.SearcherService.GetConnectedLeadersRegioned:output_type -> searcher.ConnectedLeadersRegionedResponse
	14, // 24: searcher.SearcherService.GetTipAccounts:output_type -> searcher.GetTipAccountsResponse
	17, // 25: searcher.SearcherService.GetRegions:output_type -> searcher.GetRegionsResponse
	18, // [18:26] is the sub-list for method output_type
	10, // [10:18] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_searcher_proto_init() }
func file_searcher_proto_init() {
	if File_searcher_proto != nil {
		return
	}
	file_bundle_proto_init()
	file_packet_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_searcher_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedLeadersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendBundleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendBundleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramSubscriptionV0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteLockedAccountSubscriptionV0); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MempoolSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingTxNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextScheduledLeaderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NextScheduledLeaderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedLeadersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedLeadersRegionedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectedLeadersRegionedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTipAccountsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTipAccountsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeBundleResultsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searcher_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_searcher_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*MempoolSubscription_ProgramV0Sub)(nil),
		(*MempoolSubscription_WlaV0Sub)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_searcher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_searcher_proto_goTypes,
		DependencyIndexes: file_searcher_proto_depIdxs,
		MessageInfos:      file_searcher_proto_msgTypes,
	}.Build()
	File_searcher_proto = out.File
	file_searcher_proto_rawDesc = nil
	file_searcher_proto_goTypes = nil
	file_searcher_proto_depIdxs = nil
}
